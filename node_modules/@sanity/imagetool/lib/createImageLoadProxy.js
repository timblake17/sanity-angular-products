'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = createImageLoadProxy;

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createImageLoadProxy(Component, { error: ErrorComponent, loader: LoaderComponent } = {}) {
  var _class, _temp2;

  return _temp2 = _class = class ImageLoadProxy extends _react2.default.Component {
    constructor(...args) {
      var _temp;

      return _temp = super(...args), this.state = {
        image: null,
        error: null
      }, _temp;
    }

    componentWillMount() {
      this.loadImage(this.props.src);
    }

    loadImage(src) {
      const image = new Image();
      this.setState({
        image: null,
        error: null
      });

      image.onload = () => {
        this.setState({
          image: image,
          error: null
        });
      };

      image.onerror = () => {
        this.setState({ error: new Error(`Could not load image from ${JSON.stringify(this.props.src)}`) });
      };

      image.src = src;
    }

    componentWillReceiveProps(nextProps) {
      if (nextProps.src !== this.props.src) {
        this.loadImage(nextProps.src);
      }
    }

    render() {
      var _state = this.state;
      const error = _state.error,
            image = _state.image;


      if (!error && !image) {
        // loading
        return LoaderComponent ? _react2.default.createElement(LoaderComponent, this.props) : null;
      }
      if (error) {
        return ErrorComponent ? _react2.default.createElement(ErrorComponent, _extends({}, this.props, { error: error })) : null;
      }
      return _react2.default.createElement(Component, _extends({}, this.props, { image: image }));
    }
  }, _class.displayName = `${Component.displayName || Component.name || '<Anonymous>'}$ImageLoadProxy`, _class.propTypes = {
    src: _propTypes2.default.string.isRequired
  }, _temp2;
}